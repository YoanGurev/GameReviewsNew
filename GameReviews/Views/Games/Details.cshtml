@model GameReviews.Models.Game

@{
    ViewData["Title"] = Model.Title;
    


    string? embedVideoUrl = null;

    if (!string.IsNullOrWhiteSpace(Model.VideoUrl))
    {
        var youTubeMatch = System.Text.RegularExpressions.Regex.Match(
            Model.VideoUrl,
            @"(?:youtu\.be\/|youtube\.com\/(?:watch\?v=|embed\/|v\/))([a-zA-Z0-9_-]{11})"
        );

        if (youTubeMatch.Success)
        {
            var videoId = youTubeMatch.Groups[1].Value;
            embedVideoUrl = $"https://www.youtube.com/embed/{videoId}";
        }
    }
}

<h2 class="text-white">@Model.Title</h2>
<p class="text-light">@Model.Genre?.Name | @Model.Platform?.Name</p>
<p class="text-light">
    <strong>Price:</strong> @Model.Price.ToString("C")
</p>

@if (!string.IsNullOrWhiteSpace(Model.Description))
{
    <p class="text-white">@Model.Description</p>
}

@if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
{
    <div class="mb-4">
        <img src="@Model.ImageUrl" alt="@Model.Title" class="img-fluid rounded shadow-sm" style="max-width: 400px;" />
    </div>
}

@if (!string.IsNullOrEmpty(embedVideoUrl))
{
    <div class="ratio ratio-16x9 mb-4">
        <iframe src="@embedVideoUrl" title="Game Trailer" frameborder="0" allowfullscreen></iframe>
    </div>
}

<hr />
<h4 class="text-light">Reviews</h4>
<p class="text-white"><strong>@Model.Reviews.Count()</strong> review@(Model.Reviews.Count() == 1 ? "" : "s")</p>

@if (Model.Reviews.Any())
{
    <div class="list-group">

        @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt))
        {
            <div class="list-group-item bg-dark text-light border-light rounded mb-2">
                <strong>@review.User.UserName</strong>
                <span class="text-warning">Rating: @review.Rating/10</span><br />
                <small class="text-muted">@review.CreatedAt.ToLocalTime():g</small>
                <p class="mt-2">@review.Content</p>

                <div>
                    <div class="d-flex gap-2">
                        <div class="d-flex gap-2">
                            <form asp-controller="Games" asp-action="Upvote" method="post" class="vote-form" data-review-id="@review.Id">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@review.Id" />
                                <button type="submit" class="btn btn-success btn-sm">
                                    <i class="bi bi-hand-thumbs-up-fill"></i> @review.Upvotes
                                </button>
                            </form>

                            <form asp-controller="Games" asp-action="Downvote" method="post" class="vote-form" data-review-id="@review.Id">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@review.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="bi bi-hand-thumbs-down-fill"></i> @review.Downvotes
                                </button>
                            </form>
                        </div>

                    </div>

                    <form asp-controller="Games" asp-action="DeleteReview" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="reviewId" value="@review.Id" />
                        <button type="submit" class="btn btn-link btn-sm text-danger" onclick="return confirm('Are you sure you want to delete this review?');">
                            Delete Review
                        </button>
                    </form>

                </div>

                <div class="replies-container mt-3 mb-2" data-review-id="@review.Id">
                    <button class="btn btn-link btn-sm show-replies-btn" data-review-id="@review.Id">
                        Show all replies <i class="bi bi-chevron-down"></i>
                    </button>
                    <div class="replies-list mt-2" id="replies-list-@review.Id" style="display:none;">
                        
                    </div>
                </div>

                @if (User.Identity.IsAuthenticated)
                {
                    <form class="reply-form mt-2" data-review-id="@review.Id">
                        @Html.AntiForgeryToken()
                        <textarea name="content" class="form-control mb-1" placeholder="Write a reply..." required></textarea>
                        <button type="submit" class="btn btn-primary btn-sm">Post Reply</button>
                    </form>
                }
            </div>
        }
    </div>
}
else
{
    <p class="text-muted">No reviews yet for this game.</p>
}

@if (User.Identity.IsAuthenticated)
{
    <hr />
    <h4 class="text-light">Add Your Review</h4>

    <form asp-action="PostReview" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="GameId" value="@Model.Id" />

        <div class="mb-3">
            <label for="Rating" class="form-label text-white">Rating (1-10)</label>
            <input type="number" name="Rating" min="1" max="10" class="form-control" required />
        </div>

        <div class="mb-3">
            <label for="Content" class="form-label text-white">Review</label>
            <textarea name="Content" class="form-control" rows="4" required></textarea>
        </div>

        <button type="submit" class="btn btn-primary">Submit Review</button>
    </form>

    <form asp-controller="Favorites" asp-action="Toggle" method="post" class="mt-3">
        <input type="hidden" name="gameId" value="@Model.Id" />
        <button type="submit" class="btn btn-warning">
            @(Model.Favorites?.Any(f => f.UserId == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value) == true
                ? "Remove from Favorites"
                : "Add to Favorites")
        </button>
    </form>
}
else
{
    <p class="text-light"><a href="/Identity/Account/Login">Log in</a> to post a review.</p>
}

@section Scripts {
    <script src="~/js/reviewReplies.js"></script>
    <script src="~/js/reviewVotes.js"></script>
}





