@model GameReviews.Models.ViewModels.PaginatedList<GameReviews.Models.ViewModels.FavoritesViewModel>

@{
    ViewData["Title"] = "Your Favorite Games";
}

<h2 class="text-light mb-4">Your Favorite Games On The Platform</h2>


@if (!Model.Any())
{
    <div class="alert alert-info text-light bg-dark border-light">
        You haven't added any games to your favorites yet.
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var game in Model)
        {
            <div class="col">
                <div class="card bg-dark text-light h-100 border-light shadow-sm">
                    @if (!string.IsNullOrEmpty(game.ImageUrl))
                    {
                        <img src="@game.ImageUrl" class="card-img-top" alt="@game.Title" style="height: 200px; object-fit: cover;" />
                    }

                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@game.Title</h5>

                        <span class="badge bg-primary me-2">@game.GenreName</span>
                        <span class="badge bg-secondary">@game.PlatformName</span>

                        <div class="mt-auto">
                            <a asp-controller="Games" asp-action="Details" asp-route-id="@game.GameId" class="btn btn-sm btn-outline-light mt-3 w-100">
                                View Details
                            </a>

                            <form asp-controller="Favorites" asp-action="Remove" asp-route-id="@game.GameId" method="post" class="mt-2">
                                <button type="submit" class="btn btn-sm btn-danger w-100">
                                    Remove from Favorites
                                </button>

                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
<nav class="mt-4">
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1 })">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1 })">Next</a>
            </li>
        }
    </ul>
</nav>



